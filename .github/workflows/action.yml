name: Python CI with uv and linting

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

env:
  PYTHON_VERSION: "3.12"
  UV_BIN_DIR: "$HOME/.cargo/bin"

jobs:
  build:
    name: üîß Build Environment
    runs-on: ubuntu-latest

    outputs:
      python-version: ${{ steps.setup_python.outputs.python-version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        id: setup_python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache uv binary
        uses: actions/cache@v4
        with:
          path: ${{ env.UV_BIN_DIR }}
          key: uv-bin-${{ runner.os }}

      - name: Install uv (if not cached)
        run: |
          if [ ! -f "$UV_BIN_DIR/uv" ]; then
            curl -Ls https://astral.sh/uv/install.sh | bash
          fi
          echo "$UV_BIN_DIR" >> $GITHUB_PATH

      - name: Install dependencies system-wide
        run: |
          uv pip install --system flake8 pytest

  lint:
    name: üßπ Lint Code
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ needs.build.outputs.python-version }}

      - name: Restore uv binary
        uses: actions/cache@v4
        with:
          path: ${{ env.UV_BIN_DIR }}
          key: uv-bin-${{ runner.os }}

      - name: Run flake8
        run: |
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          flake8 . || echo "‚ö†Ô∏è Lint warnings found"
        continue-on-error: true

  test:
    name: üß™ Run Tests
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ needs.build.outputs.python-version }}

      - name: Restore uv binary
        uses: actions/cache@v4
        with:
          path: ${{ env.UV_BIN_DIR }}
          key: uv-bin-${{ runner.os }}

      - name: Run tests
        run: |
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
          uv sync 
          ./run_tests.sh || echo "‚ö†Ô∏è Tests failed"
